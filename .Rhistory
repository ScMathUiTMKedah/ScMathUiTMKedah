library(RCurl)
library(DataExplorer)
library(ggplot2)
library(plotly)
x <- getURL("https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv")
library (readr)
urlfile="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv"
mydata<-read_csv(url(urlfile))
mydata(head)
mydata
str(mydata)
#library(RCurl)
#library(DataExplorer)
library(ggplot2)
library(plotly)
library (readr)
urlfile1="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv"
urlfile2="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_malaysia.csv"
vac_state<-read_csv(url(urlfile1))
vac_malaysia<-read_csv(url(urlfile2))
# x <- getURL("https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv")
# y <- getURL("https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_malaysia.csv")
# vac_state <- read.csv(text = x)
# vac_malaysia <- read.csv(text = y)
str(vac_state)
str(vac_malaysia)
vac_state$date <- as.Date(vac_state$date)
vac_malaysia$date <- as.Date(vac_malaysia$date)
vac_state$state <- as.factor(vac_state$state)
#DataExplorer::create_report(vac_state)
plot(vac_malaysia$date, vac_malaysia$dose1_daily)
p <- ggplotly(vac_state %>%
group_by(vac_state$state) %>%
ggplot(aes(x=as.Date(vac_state$date), y=as.numeric(vac_state$total_cumul), color=vac_state$state)) +
geom_line() +
labs(x = "Date",
y = "Total Vaccines Received",
title = "Total Number of People Received Vaccines",
subtitle = "by State"))
p
View(vac_state)
write.csv(vac_state,'vac_state.csv')
write.csv(vac_malaysia,'vac_malaysia.csv')
plot(vac_state$date, vac_state$total_cumul, group_by(vac_state$state))
typeof(vac_state$state)
plot(vac_state$date, vac_state$total_cumul, group_by(as.factor(vac_state$state)))
str(vac_state)
vac_state$state <- as.factor(vac_state$state)
plot(vac_state$date, vac_state$total_cumul, group_by(as.factor(vac_state$state)))
plot(vac_state$date, vac_state$total_cumul, group_by(vac_state$state))
plot(vac_state$date, vac_state$total_cumul, groupby(vac_state$state))
plot(vac_state$date, vac_state$total_cumul, grouping(vac_state$state))
?plot()
plot(vac_state$date, vac_state$total_cumul)
plot(vac_state$date, vac_state$total_cumul, colors(vac_state$state))
plot(vac_state$date, vac_state$total_cumul, type = "l")
vac_state %>%
group_by(vac_state$state) %>%
plot(vac_state$date, vac_state$total_cumul, type = "l")
p <- ggplotly(vac_state %>%
group_by(vac_state$state) %>%
ggplot(aes(x=as.Date(vac_state$date), y=as.numeric(vac_state$total_cumul), color=vac_state$state)) +
geom_line() +
labs(x = "Date",
y = "Total Vaccines Received",
legend(vac_state$state),
title = "Total Number of People Received Vaccines",
subtitle = "by State"))
p <- ggplotly(vac_state %>%
group_by(vac_state$state) %>%
ggplot(aes(x=as.Date(vac_state$date), y=as.numeric(vac_state$total_cumul), color=vac_state$state)) +
geom_line() +
labs(x = "Date",
y = "Total Vaccines Received",
legend = "vac_state$state",
title = "Total Number of People Received Vaccines",
subtitle = "by State"))
p
p <- ggplotly(vac_state %>%
group_by(vac_state$state) %>%
ggplot(aes(x=as.Date(vac_state$date), y=as.numeric(vac_state$total_cumul), color=vac_state$state)) +
geom_line() +
labs(x = "Date",
y = "Total Vaccines Received",
legend = "State",
title = "Total Number of People Received Vaccines",
subtitle = "by State"))
p
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~total_cumul, color = ~state)
#library(RCurl)
#library(DataExplorer)
library(ggplot2)
library(plotly)
library (readr)
urlfile1="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv"
urlfile2="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_malaysia.csv"
vac_state<-read_csv(url(urlfile1))
vac_malaysia<-read_csv(url(urlfile2))
str(vac_state)
str(vac_malaysia)
vac_state$date <- as.Date(vac_state$date)
vac_malaysia$date <- as.Date(vac_malaysia$date)
vac_state$state <- as.factor(vac_state$state)
setwd("D:/R/R Project/vaccine-my")
write.csv(vac_state,'vac_state.csv')
write.csv(vac_malaysia,'vac_malaysia.csv')
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~total_cumul, color = ~state)
fig
fig1
f
fig1 <- plot_ly(data = vac_state$state[c("Kedah","Pulau Pinang","Perak","Perlis")],
x = ~date, y = ~dose1_cumul, color = ~state)
fig1 <- plot_ly(data = vac_state,
x = ~date, y = ~dose1_cumul, color = ~state==c("Kedah","Pulau Pinang","Perak","Perlis"))
fig1
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul, color = ~state)
fig1
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul, color = ~state)
fig1
fig2 <- plot_ly(data = vac_state, x = ~date, y = ~dose2_cumul, color = ~state)
fig2
fig3 <- plot_ly(data = vac_state, x = ~date, y = ~total_cumul, color = ~state)
fig4 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_daily, color = ~state)
fig5 <- plot_ly(data = vac_state, x = ~date, y = ~dose2_daily, color = ~state)
fig6 <- plot_ly(data = vac_state, x = ~date, y = ~total_daily, color = ~state)
par(mfrow=c(2,3))
fig1
fig4
fig2
fig5
fig3
fig6
par(mfrow=c(3,2))
fig1
fig4
fig2
fig5
fig3
fig6
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul, type = "line", color = ~state)
fig1
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul, type = "bar", color = ~state)
fig1
fig4 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_daily, color = ~state)
fig4
fig4
#library(RCurl)
#library(DataExplorer)
library(ggplot2)
library(plotly)
library (readr)
urlfile1="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv"
urlfile2="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_malaysia.csv"
vac_state<-read_csv(url(urlfile1))
vac_malaysia<-read_csv(url(urlfile2))
# x <- getURL("https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv")
# y <- getURL("https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_malaysia.csv")
# vac_state <- read.csv(text = x)
# vac_malaysia <- read.csv(text = y)
str(vac_state)
str(vac_malaysia)
vac_state$date <- as.Date(vac_state$date)
vac_malaysia$date <- as.Date(vac_malaysia$date)
vac_state$state <- as.factor(vac_state$state)
write.csv(vac_state,'vac_state.csv')
write.csv(vac_malaysia,'vac_malaysia.csv')
#DataExplorer::create_report(vac_state)
plot(vac_malaysia$date, vac_malaysia$dose1_daily)
p <- ggplotly(vac_state %>%
group_by(vac_state$state) %>%
ggplot(aes(x=as.Date(vac_state$date), y=as.numeric(vac_state$total_cumul), color=vac_state$state)) +
geom_line() +
labs(x = "Date",
y = "Total Vaccines Received",
legend = "State",
title = "Total Number of People Received Vaccines",
subtitle = "by State"))
p
fig1 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul, color = ~state)
fig1
fig2 <- plot_ly(data = vac_state, x = ~date, y = ~dose2_cumul, color = ~state)
fig2
fig3 <- plot_ly(data = vac_state, x = ~date, y = ~total_cumul, color = ~state)
fig3
fig4 <- plot_ly(data = vac_state, x = ~date, y = ~dose1_daily, color = ~state)
fig4
fig5 <- plot_ly(data = vac_state, x = ~date, y = ~dose2_daily, color = ~state)
fig5
fig6 <- plot_ly(data = vac_state, x = ~date, y = ~total_daily, color = ~state)
fig6
vac_state %>% vac_state$state == "Kedah" %>%
plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul)
vac_state %>% vac_state$state["Kedah"] %>%
plot_ly(data = vac_state, x = ~date, y = ~dose1_cumul)
fig4
fig1
fig2
setwd("D:/R/R Project/vaccine-my")
#library(RCurl)
#library(DataExplorer)
library(ggplot2)
library(plotly)
library (readr)
urlfile1="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_state.csv"
urlfile2="https://raw.githubusercontent.com/CITF-Malaysia/citf-public/main/vaccination/vax_malaysia.csv"
vac_state<-read_csv(url(urlfile1))
vac_malaysia<-read_csv(url(urlfile2))
str(vac_state)
vac_state$date <- as.Date(vac_state$date)
vac_malaysia$date <- as.Date(vac_malaysia$date)
vac_state$state <- as.factor(vac_state$state)
write.csv(vac_state,'vac_state.csv')
write.csv(vac_malaysia,'vac_malaysia.csv')
max(vac_malaysia$date)
vac_malaysia$total_cumul[max(vac_malaysia$date)]
as.Integer(vac_malaysia$total_cumul[max(vac_malaysia$date)])
as.number(vac_malaysia$total_cumul[max(vac_malaysia$date)])
vac_malaysia[max(vac_malaysia$date,8)]
View(vac_malaysia)
vac_malaysia[-1,7]
vac_malaysia(-1,7)
vac_malaysia[length(vac_malaysia),7]
vac_malaysia[7,length(vac_malaysia)]
max(vac_malaysia$total_cumul)
fig6 <- plot_ly(data = vac_state, x = ~date, y = ~total_daily, color = ~state)
fig6
knitr::opts_chunk$set(echo = FALSE)
$$
library(scholar)
get_citation_history(qVPi6kYAAAA)
get_citation_history('qVPi6kYAAAA')
get_citation_history('qVPi6kYAAAAJ')
get_publications('qVPi6kYAAAAJ')
predict_h_index('qVPi6kYAAAAJ')
get_profile('qVPi6kYAAAAJ')
get_profile('qVPi6kYAAAAJ')$total_cites
library(scholar)
library(ggplot2)
cit <- get_citation_history('qVPi6kYAAAAJ')
profile <- get_profile('qVPi6kYAAAAJ')
total_cites <- profile$total_cites
h_index <- profile$h_index
i10_index <- profile$i10_index
png('scholar_citations_qVPi6kYAAAAJ.png', width=800, height=300, res=150)
ggplot(cit,aes(x=year,y=cites)) + geom_bar(stat='identity', fill="steelblue") +
theme_minimal() +
xlab('Year of citation') +
ylab('Google Scholar\n cites') +
geom_text(aes(label=cites), vjust=1.6, color="white", size=3.5) +
ggtitle(paste('Google Scolar Citation as of ', Sys.Date(), sep = " "))
#  annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),
#           x=-Inf, y=Inf, vjust=1.5, hjust=-0.05, size=3, colour='blue')
dev.off()
library(scholar)
library(ggplot2)
cit <- get_citation_history('qVPi6kYAAAAJ')
profile <- get_profile('qVPi6kYAAAAJ')
total_cites <- profile$total_cites
h_index <- profile$h_index
i10_index <- profile$i10_index
png('scholar_citations_qVPi6kYAAAAJ.png', width=800, height=300, res=150)
ggplot(cit,aes(x=year,y=cites)) + geom_bar(stat='identity', fill="steelblue") +
theme_minimal() +
xlab('Year of citation') +
ylab('Google Scholar\n cites') +
geom_text(aes(label=cites), vjust=1.6, color="white", size=3.5) +
ggtitle(paste('Google Scolar Citation as of ', Sys.Date(), sep = " "))
#  annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),
#           x=-Inf, y=Inf, vjust=1.5, hjust=-0.05, size=3, colour='blue')
dev.off()
total_cites
h_index
i10_index
get_citation_history('qVPi6kYAAAAJ')
remotes::install_github("rstudio/distill")
install.packages("xfun")
library(bibliometrix)
biblioshiny()
biblioshiny()
setwd("D:/R/Training/workshop/Writing reproducible manuscripts in R using papaja")
